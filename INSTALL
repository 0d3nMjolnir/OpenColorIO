How to Test the nuke plugin,

Make a build directory, cd

> mkdir -p build
> cd build

Configure cmake, pointing at your nuke include dir
> cmake -D NUKE:FILEPATH=/usr/local/nuke6.0.3/include/ -D CMAKE_BUILD_TYPE=Release ../

Build all targets...
> make

You will now see the built .so files
> ls

Set the environment variable pointing at which configuration to use
> setenv OCS /net/homedirs/jeremys/git/OpenColorSpace/configs/spivfx/config.ocs

Launch nuke, then load the plugin (this can also go in init.py)

> nuke.load('/net/homedirs/jeremys/git/OpenColorSpace/build/libNukeColorSpaceConversion.so')
> nuke.menu('Nodes').addMenu('Color').addCommand('OCSColorSpaceConversion', 'nuke.createNode("OCSColorSpaceConversion")')

Connect an image to the OCSColorSpaceConversion node.




----------------------------------------------------------------------------------------------------------------------


OpenColorSpace is set up for CMake ( http://www.cmake.org/cmake/help/cmake-2-8-docs.html ). On Unix, building should look like this:

$ mkdir build && cd build
build $ cmake ../
build $ make
and then one might do
build $ ./OpenColorSpaceTest

Configuration/build options are available.
For a console UI to view and set available options, use
build $ ccmake ../
or for interactive text prompts,
build $ cmake -i ../
or to specify them on the command line,
build $ cmake -D NUKE:FILEPATH=/usr/local/nuke6.0.3/include/ -D PYTHON:FILEPATH=/usr/local/include/python2.6/ ../
All together,
mkdir build && cd build && cmake ../ && make OpenColorSpaceTest && ./OpenColorSpaceTest

